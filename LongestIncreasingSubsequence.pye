# get the length of maximum incresing subsequence
class Answer():
    def LongestIncreasingSubsequence(self, nums) -> int:
        
        LIS = [1] * len(nums)
        
        for i in range(len(nums) -1, -1, -1):
            for j in range(i + 1, len(nums)):
                if nums[j] > nums[i]:
                    LIS[i] = max(LIS[i], 1 + LIS[j])
                    
        print(LIS)
        return max(LIS)
        
        
ans = Answer()
print(ans.LongestIncreasingSubsequesce([1, 3, 4, 5])) # [1, 3, 4, 5] --> 4
print(ans.LongestIncreasingSubsequesce([1, 2, 3, 0, 1])) # [1, 2, 3] --> 3
print(ans.LongestIncreasingSubsequesce([5, 10, 3, 2, 3, 8, 10, 4, 7, 12, 15])) #[2, 3, 8, 10, 12, 15] --> 6 
print(ans.LongestIncreasingSubsequesce([5, 10, 0])) #[5, 10] -> 2
print(ans.LongestIncreasingSubsequesce([10, 2, 0])) #[10] --> 1

